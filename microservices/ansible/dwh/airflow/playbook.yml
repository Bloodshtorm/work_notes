---
- hosts: airflow_servers
  become: true
  vars_files:
    - ../secrets.yml  # Путь к вашему файлу с секретами

  vars:
    airflow_home: /home/airflow  # Определяем переменную airflow_home

  tasks:
    - name: Установка необходимых пакетов
      apt:
        name:
          - python3-pip
          - libpq-dev
          - python3-dev
          - build-essential
          - python3-venv  # Убедитесь, что установлен пакет для создания виртуальных окружений
        state: present
      when: ansible_os_family == "Debian"

    - name: Создание пользователя airflow
      user:
        name: airflow
        shell: /bin/bash
        home: "{{ airflow_home }}"  # Используем переменную airflow_home
        state: present

    - name: Создание виртуального окружения
      command: python3 -m venv {{ airflow_home }}/venv
      args:
        creates: "{{ airflow_home }}/venv"

    - name: Копирование файла requirements.txt на удаленный сервер
      copy:
        src: ../airflow/requirements.txt  # Обновите путь, если файл находится на уровень выше
        dest: "{{ airflow_home }}/requirements.txt"  # Путь на удаленном сервере

    - name: Установка Apache Airflow в виртуальном окружении
      pip:
        requirements: "{{ airflow_home }}/requirements.txt"  # Используйте файл requirements для установки
        virtualenv: "{{ airflow_home }}/venv"
      environment:
        VIRTUAL_ENV: "{{ airflow_home }}/venv"
        PATH: "{{ airflow_home }}/venv/bin:{{ ansible_env.PATH }}"

    - name: Создание необходимых директорий
      file:
        path: "{{ airflow_home }}/{{ item }}"
        state: directory
        owner: airflow
        group: airflow
        mode: '0755'
      loop:
        - dags
        - logs
        - plugins

    - name: Создание файла конфигурации Airflow
      template:
        src: airflow.cfg.j2
        dest: "{{ airflow_home }}/airflow.cfg"  # Используем переменную airflow_home
      notify:
        - инициализация базы данных

    - name: Запуск Airflow webserver
      shell: "{{ airflow_home }}/venv/bin/airflow webserver -D"
      args:
        chdir: "{{ airflow_home }}"
      async: 10
      poll: 0

    - name: Запуск Airflow scheduler
      shell: "{{ airflow_home }}/venv/bin/airflow scheduler -D"
      args:
        chdir: "{{ airflow_home }}"
      async: 10
      poll: 0

  handlers:
    - name: инициализация базы данных
      command: "{{ airflow_home }}/venv/bin/airflow db init"
      args:
        chdir: "{{ airflow_home }}"
